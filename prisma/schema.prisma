// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model CountOrder{
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  count       Int @default(0)
  date        DateTime @default(now())

  @@map("bonari-pizzaria-dev-count-orders")
}

type Address{
  cep             String
  uf              String
  city            String
  neighbothood    String
  street          String
  streetNumber    String
  complement      String
}

model Client{
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  phoneNumber String
  addresses   Address[]
  orders      Order[]

  createdDate  DateTime
  updatedDate  DateTime 
  @@map("bonari-pizzaria-dev-clients")
}

model Order{
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  orderId     Int
  client      Client @relation(fields: [clientId], references: [id])
  clientId    String @db.ObjectId
  items       Item[]
  address     Address
  isDelivery  Boolean @default(true)
  deliveryFee Float
  total       Float

  startDate   DateTime @default(now())
  updateDate  DateTime 
  status      String

  @@map("bonari-pizzaria-dev-orders")
}

type Item{
  quantity    Int
  observation String
  subTotal    Float
  formatPiece String
  aditionals  AditionalType[]
  products    ProductType[]
}

model Product{
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  pieces      Int
  category    String
  isEnable    Boolean @default(true)


  createdDate  DateTime
  updatedDate  DateTime
  @@map("bonari-pizzaria-dev-products")
}
type ProductType{
  id          String 
  name        String
  description String
  price       Float
  pieces      Int
  category    String
  isEnable    Boolean @default(true)

  createdDate  DateTime
  updatedDate  DateTime
}

model Aditional{
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Float
  quantity    Int
  isEnable    Boolean @default(true)

  createdDate  DateTime
  updatedDate  DateTime
  @@map("bonari-pizzaria-dev-aditionals")
}
type AditionalType{
  id          String
  name        String
  price       Float
  quantity    Int
  isEnable    Boolean @default(true)
  createdDate  DateTime
  updatedDate  DateTime
}

model User{
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  phoneNumber String
  email       String @unique
  password    String
  role        Role @default(USER)
  isEnable    Boolean @default(true)

  createdDate  DateTime
  updatedDate  DateTime
  @@map("bonari-pizzaria-dev-users")
}
enum Role{
  ADMIN
  USER
}